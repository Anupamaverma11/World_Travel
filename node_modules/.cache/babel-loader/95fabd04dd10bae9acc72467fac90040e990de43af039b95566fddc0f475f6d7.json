{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kali\\\\Desktop\\\\world\\\\src\\\\contexts\\\\CitiesContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst context = /*#__PURE__*/createContext();\nfunction CitiesProvider({\n  children\n}) {\n  _s();\n  const [cities, setCities] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [CurrentCity, setCurrentCity] = useState({});\n  useEffect(function () {\n    async function getData() {\n      // setIsLoading(true);\n      const res = await fetch(\"http://localhost:8000/cities\");\n      if (res.ok) {\n        const data = await res.json();\n        console.log(data);\n        setCities(data);\n        setIsLoading(false);\n      } else {\n        alert(\"there was an error loading data\");\n      }\n    }\n    getData();\n  }, []);\n  async function getCity(id) {\n    // setIsLoading(true);\n    const res = await fetch(`http://localhost:8000/cities/${id}`);\n    if (res.ok) {\n      const data = await res.json();\n      console.log(data);\n      setCurrentCity(data);\n      setIsLoading(false);\n    } else {\n      alert(\"there was an error loading data\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(context.Provider, {\n    value: {\n      cities,\n      isLoading,\n      CurrentCity,\n      getCity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(CitiesProvider, \"HjVICZfVDgCRKdQV6f267j9rZVg=\");\n_c = CitiesProvider;\nfunction useCities() {\n  _s2();\n  const contextfull = useContext(context);\n  if (context === undefined) throw new Error(\"cities context was used outside  provider\");\n  return contextfull;\n}\n_s2(useCities, \"leheCGaQOakBy7b7XgtATfO/cfM=\");\nexport { CitiesProvider, useCities };\nvar _c;\n$RefreshReg$(_c, \"CitiesProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","context","CitiesProvider","children","_s","cities","setCities","isLoading","setIsLoading","CurrentCity","setCurrentCity","getData","res","fetch","ok","data","json","console","log","alert","getCity","id","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCities","_s2","contextfull","undefined","Error","$RefreshReg$"],"sources":["C:/Users/Kali/Desktop/world/src/contexts/CitiesContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nconst context = createContext();\r\n\r\nfunction CitiesProvider({children})\r\n{\r\n    const [cities , setCities] = useState([]);\r\n    const [isLoading , setIsLoading] = useState(false);\r\n    const [CurrentCity , setCurrentCity] = useState({});\r\n\r\n    useEffect(function(){\r\n      async function getData()\r\n      {\r\n        // setIsLoading(true);\r\n        const res = await fetch(\"http://localhost:8000/cities\");\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n          console.log(data);\r\n          setCities(data);\r\n          setIsLoading(false);\r\n        }\r\n        else\r\n        {\r\n          alert(\"there was an error loading data\");\r\n        }\r\n      }\r\n      getData();\r\n    } , [])\r\n\r\n    async function getCity(id)\r\n    {\r\n        // setIsLoading(true);\r\n        const res = await fetch(`http://localhost:8000/cities/${id}`);\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n          console.log(data);\r\n          setCurrentCity(data);\r\n          setIsLoading(false);\r\n        }\r\n        else\r\n        {\r\n          alert(\"there was an error loading data\");\r\n        } \r\n    }\r\n\r\n    return (\r\n        <context.Provider value = {{cities , isLoading , CurrentCity ,getCity}}>\r\n            {children}\r\n        </context.Provider>\r\n    )\r\n}\r\n\r\n\r\nfunction useCities()\r\n{\r\n    const contextfull = useContext(context);\r\n    if(context === undefined) throw new Error(\"cities context was used outside  provider\"); \r\n    return contextfull;\r\n}\r\nexport {CitiesProvider , useCities};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,OAAO,gBAAGN,aAAa,CAAC,CAAC;AAE/B,SAASO,cAAcA,CAAC;EAACC;AAAQ,CAAC,EAClC;EAAAC,EAAA;EACI,MAAM,CAACC,MAAM,EAAGC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACS,SAAS,EAAGC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAClD,MAAM,CAACW,WAAW,EAAGC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEnDD,SAAS,CAAC,YAAU;IAClB,eAAec,OAAOA,CAAA,EACtB;MACE;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MACvD,IAAGD,GAAG,CAACE,EAAE,EACT;QACE,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBT,SAAS,CAACS,IAAI,CAAC;QACfP,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,MAED;QACEW,KAAK,CAAC,iCAAiC,CAAC;MAC1C;IACF;IACAR,OAAO,CAAC,CAAC;EACX,CAAC,EAAG,EAAE,CAAC;EAEP,eAAeS,OAAOA,CAACC,EAAE,EACzB;IACI;IACA,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAA+BQ,EAAG,EAAC,CAAC;IAC7D,IAAGT,GAAG,CAACE,EAAE,EACT;MACE,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBL,cAAc,CAACK,IAAI,CAAC;MACpBP,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAED;MACEW,KAAK,CAAC,iCAAiC,CAAC;IAC1C;EACJ;EAEA,oBACInB,OAAA,CAACC,OAAO,CAACqB,QAAQ;IAACC,KAAK,EAAI;MAAClB,MAAM;MAAGE,SAAS;MAAGE,WAAW;MAAEW;IAAO,CAAE;IAAAjB,QAAA,EAClEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAACvB,EAAA,CAhDQF,cAAc;AAAA0B,EAAA,GAAd1B,cAAc;AAmDvB,SAAS2B,SAASA,CAAA,EAClB;EAAAC,GAAA;EACI,MAAMC,WAAW,GAAGnC,UAAU,CAACK,OAAO,CAAC;EACvC,IAAGA,OAAO,KAAK+B,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;EACtF,OAAOF,WAAW;AACtB;AAACD,GAAA,CALQD,SAAS;AAMlB,SAAQ3B,cAAc,EAAG2B,SAAS;AAAE,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}