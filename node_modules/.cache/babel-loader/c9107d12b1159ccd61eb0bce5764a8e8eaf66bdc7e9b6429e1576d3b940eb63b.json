{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kali\\\\Desktop\\\\world\\\\src\\\\components\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport styles from \"./User.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAKE_USER = {\n  name: \"Jack\",\n  email: \"jack@example.com\",\n  password: \"qwerty\",\n  avatar: \"https://i.pravatar.cc/100?u=zz\"\n};\nfunction User() {\n  _s();\n  const user = FAKE_USER;\n  const {\n    logout\n  } = useAuth();\n  const navigate = useNavigate();\n  function handleClick() {\n    logout();\n    navigate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.user,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: user.avatar,\n      alt: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Welcome, \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(User, \"g7afbsXwVtkaeVkbz1lCGN2Q1iQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = User;\nexport default User;\n\n/*\nCHALLENGE\n\n1) Add `AuthProvider` to `App.jsx`\n2) In the `Login.jsx` page, call `login()` from context\n3) Inside an effect, check whether `isAuthenticated === true`. If so, programatically navigate to `/app`\n4) In `User.js`, read and display logged in user from context (`user` object). Then include this component in `AppLayout.js`\n5) Handle logout button by calling `logout()` and navigating back to `/`\n*/\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["useNavigate","useAuth","styles","jsxDEV","_jsxDEV","FAKE_USER","name","email","password","avatar","User","_s","user","logout","navigate","handleClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Kali/Desktop/world/src/components/User.jsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport styles from \"./User.module.css\";\n\nconst FAKE_USER = {\n  name: \"Jack\",\n  email: \"jack@example.com\",\n  password: \"qwerty\",\n  avatar: \"https://i.pravatar.cc/100?u=zz\",\n};\n\nfunction User() {\n  const user = FAKE_USER;\n  const {logout} = useAuth();\n  const navigate = useNavigate();\n  function handleClick() {\n    logout();\n    navigate(\"/\");\n  }\n\n  return (\n    <div className={styles.user}>\n      <img src={user.avatar} alt={user.name} />\n      <span>Welcome, {user.name}</span>\n      <button onClick={handleClick}>Logout</button>\n    </div>\n  );\n}\n\nexport default User;\n\n/*\nCHALLENGE\n\n1) Add `AuthProvider` to `App.jsx`\n2) In the `Login.jsx` page, call `login()` from context\n3) Inside an effect, check whether `isAuthenticated === true`. If so, programatically navigate to `/app`\n4) In `User.js`, read and display logged in user from context (`user` object). Then include this component in `AppLayout.js`\n5) Handle logout button by calling `logout()` and navigating back to `/`\n*/\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAG;EAChBC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,kBAAkB;EACzBC,QAAQ,EAAE,QAAQ;EAClBC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAMC,IAAI,GAAGP,SAAS;EACtB,MAAM;IAACQ;EAAM,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAC1B,MAAMa,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,SAASe,WAAWA,CAAA,EAAG;IACrBF,MAAM,CAAC,CAAC;IACRC,QAAQ,CAAC,GAAG,CAAC;EACf;EAEA,oBACEV,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACU,IAAK;IAAAK,QAAA,gBAC1Bb,OAAA;MAAKc,GAAG,EAAEN,IAAI,CAACH,MAAO;MAACU,GAAG,EAAEP,IAAI,CAACN;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzCnB,OAAA;MAAAa,QAAA,GAAM,WAAS,EAACL,IAAI,CAACN,IAAI;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjCnB,OAAA;MAAQoB,OAAO,EAAET,WAAY;MAAAE,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACZ,EAAA,CAhBQD,IAAI;EAAA,QAEMT,OAAO,EACPD,WAAW;AAAA;AAAAyB,EAAA,GAHrBf,IAAI;AAkBb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}