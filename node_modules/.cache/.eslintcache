[{"C:\\Users\\Kali\\Desktop\\world\\src\\App.jsx":"1","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Pricing.jsx":"2","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Product.jsx":"3","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Homepage.jsx":"4","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\PageNotFound.jsx":"5","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Login.jsx":"6","C:\\Users\\Kali\\Desktop\\world\\src\\components\\CityList.jsx":"7","C:\\Users\\Kali\\Desktop\\world\\src\\components\\AppLayout.jsx":"8","C:\\Users\\Kali\\Desktop\\world\\src\\components\\PageNav.jsx":"9","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Spinner.jsx":"10","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Sidebar.jsx":"11","C:\\Users\\Kali\\Desktop\\world\\src\\components\\CityItem.jsx":"12","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Map.jsx":"13","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Logo.jsx":"14","C:\\Users\\Kali\\Desktop\\world\\src\\components\\AppNav.jsx":"15","C:\\Users\\Kali\\Desktop\\world\\src\\index.jsx":"16","C:\\Users\\Kali\\Desktop\\world\\src\\components\\CountriesList.jsx":"17","C:\\Users\\Kali\\Desktop\\world\\src\\components\\CountryItem.jsx":"18","C:\\Users\\Kali\\Desktop\\world\\src\\components\\City.jsx":"19","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Form.jsx":"20","C:\\Users\\Kali\\Desktop\\world\\src\\contexts\\CitiesContext.js":"21","C:\\Users\\Kali\\Desktop\\world\\src\\contexts\\AuthContext.js":"22","C:\\Users\\Kali\\Desktop\\world\\src\\components\\User.jsx":"23","C:\\Users\\Kali\\Desktop\\world\\src\\components\\SpinnerFullPage.jsx":"24"},{"size":1611,"mtime":1691875470340,"results":"25","hashOfConfig":"26"},{"size":735,"mtime":1691597404854,"results":"27","hashOfConfig":"26"},{"size":963,"mtime":1691597418833,"results":"28","hashOfConfig":"26"},{"size":730,"mtime":1691596131640,"results":"29","hashOfConfig":"26"},{"size":115,"mtime":1685774874000,"results":"30","hashOfConfig":"26"},{"size":1516,"mtime":1691867630212,"results":"31","hashOfConfig":"26"},{"size":508,"mtime":1691847779968,"results":"32","hashOfConfig":"26"},{"size":747,"mtime":1691867246384,"results":"33","hashOfConfig":"26"},{"size":571,"mtime":1691597091421,"results":"34","hashOfConfig":"26"},{"size":210,"mtime":1685774874000,"results":"35","hashOfConfig":"26"},{"size":510,"mtime":1691688308762,"results":"36","hashOfConfig":"26"},{"size":1027,"mtime":1691854394042,"results":"37","hashOfConfig":"26"},{"size":1679,"mtime":1691852423376,"results":"38","hashOfConfig":"26"},{"size":226,"mtime":1691867300270,"results":"39","hashOfConfig":"26"},{"size":372,"mtime":1685774874000,"results":"40","hashOfConfig":"26"},{"size":235,"mtime":1691777999666,"results":"41","hashOfConfig":"26"},{"size":777,"mtime":1691847797893,"results":"42","hashOfConfig":"26"},{"size":235,"mtime":1691780057987,"results":"43","hashOfConfig":"26"},{"size":1708,"mtime":1691849546649,"results":"44","hashOfConfig":"26"},{"size":2678,"mtime":1691853753961,"results":"45","hashOfConfig":"26"},{"size":3598,"mtime":1691864185732,"results":"46","hashOfConfig":"26"},{"size":1460,"mtime":1691867002877,"results":"47","hashOfConfig":"26"},{"size":1023,"mtime":1691866788425,"results":"48","hashOfConfig":"26"},{"size":239,"mtime":1685774874000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"1fviuqb",{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kali\\Desktop\\world\\src\\App.jsx",["132","133"],[],"import { BrowserRouter, Navigate, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Product from \"./pages/Product\";\nimport Pricing from \"./pages/Pricing\";\nimport Homepage from \"./pages/Homepage\";\nimport PageNotFound from \"./pages/PageNotFound\";\nimport Login from \"./pages/Login\";\nimport AppLayout from './components/AppLayout';\nimport CityList from './components/CityList';\nimport City from \"./components/City\";\nimport Form from './components/Form';\nimport { useEffect, useState } from 'react';\nimport CountriesList from './components/CountriesList';\nimport { CitiesProvider } from './contexts/CitiesContext';\nimport { AuthProvider } from './contexts/AuthContext';\n\nfunction App() {\n  return (\n    <AuthProvider>\n    <CitiesProvider>\n<BrowserRouter>\n<Routes>\n  <Route path = \"/\" element={<Homepage></Homepage>}></Route>\n  <Route path = \"/product\" element={<Pricing></Pricing>}></Route>\n  <Route path = \"/pricing\" element={<Product></Product>}></Route>\n  <Route path = \"/login\" element = {<Login></Login>}></Route>\n  <Route path = \"/app\" element = {<AppLayout></AppLayout>}>\n    <Route index element = {<Navigate replace to =\"cities\" />}></Route>\n    <Route path = \"cities\" element = {<CityList></CityList>}></Route>\n    <Route path = \"cities/:id\" element = {<City></City>}></Route>\n    <Route path = \"countries\" element = {<CountriesList></CountriesList>} ></Route>\n    <Route path = \"form\" element = {<Form></Form>}></Route>\n  </Route>\n  <Route path=\"*\" element = {<PageNotFound></PageNotFound>}></Route>\n</Routes>\n</BrowserRouter>\n</CitiesProvider>\n</AuthProvider>\n  )\n}\n\nexport default App\n","C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Pricing.jsx",[],[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Product.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Homepage.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\pages\\PageNotFound.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\pages\\Login.jsx",["134"],[],"import { useEffect, useState } from \"react\";\nimport styles from \"./Login.module.css\";\nimport PageNav from \"../components/PageNav\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  // PRE-FILL FOR DEV PURPOSES\n  const [email, setEmail] = useState(\"jack@example.com\");\n  const [password, setPassword] = useState(\"qwerty\");\n  const {login , isAuthenticated} = useAuth(); \n  const navigate = useNavigate();\n  function handleClick(e)\n   {\n      e.preventDefault();\n        login(email , password);\n        navigate(\"/app\" , {replace:true});\n   }\n  useEffect(function(){\n    if(isAuthenticated)\n    {\n      navigate(\"/app\");\n    }\n  \n  } ,[navigate])\n  return (\n    <>\n    <main className={styles.login}>\n    <PageNav></PageNav>\n      <form className={styles.form}>\n        <div className={styles.row}>\n          <label htmlFor=\"email\">Email address</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n        </div>\n\n        <div className={styles.row}>\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n        </div>\n\n        <div>\n          <button onClick={handleClick}>Login</button>\n        </div>\n      </form>\n    </main>\n    </>\n  );\n}\n","C:\\Users\\Kali\\Desktop\\world\\src\\components\\CityList.jsx",[],[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\AppLayout.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\PageNav.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\Spinner.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\Sidebar.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\CityItem.jsx",["135"],[],"import { Link, useNavigate } from \"react-router-dom\";\nimport styles from \"./CityItem.module.css\";\nimport { useCities } from \"../contexts/CitiesContext\";\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n  }).format(new Date(date));\n\n\n\n\nfunction CityItem({ x }) {\n \n  const {CurrentCity , deleteCity} = useCities();\n  const { cityName, emoji, date, id, position } = x;\n  function handleClick(e)\n  {\n    e.preventDefault();\n    deleteCity(id);\n  \n  }\n  return (\n    <li>\n       <Link className={`${styles.cityItem} ${id===CurrentCity.id ? styles[\"cityItem--active\"] : \"\"}`} to = {`${id}?lat=${position.lat}&lng=${position.lng}`}>\n       <span className={styles.emoji}>{emoji}</span>\n        <h3 className={styles.name}>{cityName}</h3>\n        <time className={styles.date}>({formatDate(date)})</time>\n        <button className={styles.deleteBtn} onClick={handleClick}>\n          &times;\n        </button></Link>\n    </li>\n  );\n}\n\nexport default CityItem;\n","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Map.jsx",["136","137","138"],[],"import { useNavigate, useSearchParams } from \"react-router-dom\";\r\nimport styles from \"./Map.module.css\";\r\nimport { MapContainer, Marker, Popup, TileLayer, useMap, useMapEvents } from \"react-leaflet\";\r\nimport {useCities} from \"../contexts/CitiesContext\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Map() {\r\n\r\n  const [searchParams , setSearchParams] = useSearchParams();\r\n  const lat = searchParams.get(\"lat\");\r\n  const lng = searchParams.get(\"lng\");\r\n\r\n  const [position,setPosition] = useState([51.505, -0.09]);\r\n  const {cities} = useCities();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(function(){\r\n    if(lat&&lng) setPosition([lat,lng]);\r\n  } , [lat , lng])\r\n  return (\r\n    <div className={styles.mapContainer}>\r\n      <MapContainer center={position} zoom={13} scrollWheelZoom={true} className={styles.map}>\r\n    <TileLayer\r\n      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n      url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\r\n    />\r\n{cities.map((city)=>{\r\n      <Marker position={[city.position.lat , city.position.lng]} key = {city.id}>\r\n      <Popup>\r\n        <span>{city.emoji}</span> <span>{city.cityName}</span>\r\n      </Popup>\r\n    </Marker>\r\n})}\r\n<ChangeCenter position={position}></ChangeCenter>\r\n<DetectClick></DetectClick>\r\n  </MapContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction ChangeCenter({position})\r\n{\r\n  const map = useMap();\r\n  map.setView(position);\r\n  return null;\r\n}\r\n\r\nfunction DetectClick()\r\n{\r\n  const navigate = useNavigate();\r\n  useMapEvents({\r\n    click: e => { \r\n      navigate(`form?lat=${e.latlng.lat}&lng=${e.latlng.lng}`)},\r\n  })\r\n}","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Logo.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\AppNav.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\index.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\CountriesList.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\CountryItem.jsx",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\City.jsx",["139","140","141"],[],"import { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport styles from \"./City.module.css\";\nimport { useEffect, useState } from \"react\";\nimport styles2 from \"./Button.module.css\";\nimport { useCities } from \"../contexts/CitiesContext\";\nimport Spinner from \"./Spinner\";\n\nconst formatDate = (date) =>\n  new Intl.DateTimeFormat(\"en\", {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\",\n    weekday: \"long\",\n  }).format(new Date(date));\n\nfunction City() {\n  const navigate = useNavigate();\n  const {id} = useParams();\n\n  const {getCity , CurrentCity , isLoading} = useCities();\n\n  useEffect(function (){\n    getCity(id)\n  }, [])\n\n  const { cityName, emoji, date, notes } = CurrentCity;\n\n  if(isLoading) return <Spinner />\n  return (\n    <div className={styles.city}>\n      <div className={styles.row}>\n        <h6>City name</h6>\n        <h3>\n          <span>{emoji}</span> {cityName}\n        </h3>\n      </div>\n\n      <div className={styles.row}>\n        <h6>You went to {cityName} on</h6>\n        <p>{formatDate(date || null)}</p>\n      </div>\n\n      {notes && (\n        <div className={styles.row}>\n          <h6>Your notes</h6>\n          <p>{notes}</p>\n        </div>\n      )}\n\n      <div className={styles.row}>\n        <h6>Learn more</h6>\n        <a\n          href={`https://en.wikipedia.org/wiki/${cityName}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Check out {cityName} on Wikipedia &rarr;\n        </a>\n      </div>\n\n      <div>\n      <button className={[styles2.back , styles2.btn].join(\" \")} onClick={(e)=>{\n          e.preventDefault();\n          navigate(-1)}}>&larr; Back</button>\n      </div>\n    </div>\n  );\n}\n\nexport default City;\n","C:\\Users\\Kali\\Desktop\\world\\src\\components\\Form.jsx",["142","143"],[],"\nimport { useEffect, useState } from \"react\";\n\nimport styles from \"./Form.module.css\";\nimport styles2 from \"./Button.module.css\";\n\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useCities } from \"../contexts/CitiesContext\";\n\nexport function convertToEmoji(countryCode) {\n  const codePoints = countryCode\n    .toUpperCase()\n    .split(\"\")\n    .map((char) => 127397 + char.charCodeAt());\n  return String.fromCodePoint(...codePoints);\n}\n\nfunction Form() {\n  const navigate = useNavigate();\n  \n  const [searchParams , setSearchParams] = useSearchParams();\n  const lat = searchParams.get(\"lat\");\n  const lng = searchParams.get(\"lng\");\n\n  const [cityName, setCityName] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [date, setDate] = useState(new Date());\n  const [notes, setNotes] = useState(\"\");\n\n  const {createCity} = useCities();\n\n  useEffect(function(){\n    async function getCityData()\n    {\n      try{\n          const res = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}`);\n          if(res.ok)\n          {\n            const data = await res.json();\n            setCityName(data.city|| data.locality || \"\");\n          }\n      }\n      catch{\n\n      }\n    }\n    getCityData();\n  },[lat,lng]);\n\n  function handleSubmit(e)\n  {\ne.preventDefault();\nif(!cityName)\n{\n  return ;\n\n}\nconst newCity = {\n  cityName,\n  country,\n  date,\n  notes,\n  position:{lat,lng},\n}\ncreateCity(newCity);\n  }\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <div className={styles.row}>\n        <label htmlFor=\"cityName\">City name</label>\n        <input\n          id=\"cityName\"\n          onChange={(e) => setCityName(e.target.value)}\n          value={cityName}\n        />\n        {/* <span className={styles.flag}>{emoji}</span> */}\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"date\">When did you go to {cityName}?</label>\n        <input\n          id=\"date\"\n          onChange={(e) => setDate(e.target.value)}\n          value={date}\n        />\n      </div>\n\n      <div className={styles.row}>\n        <label htmlFor=\"notes\">Notes about your trip to {cityName}</label>\n        <textarea\n          id=\"notes\"\n          onChange={(e) => setNotes(e.target.value)}\n          value={notes}\n        />\n      </div>\n\n      <div className={styles.buttons}>\n        <button className={[styles2.primary , styles2.btn].join(\" \")}>Add</button>\n        <button className={[styles2.back , styles2.btn].join(\" \")} onClick={(e)=>{\n          e.preventDefault();\n          navigate(-1)}}>&larr; Back</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Form;\n","C:\\Users\\Kali\\Desktop\\world\\src\\contexts\\CitiesContext.js",["144","145","146","147"],[],"import { createContext, useContext, useEffect, useReducer, useState } from \"react\";\r\n\r\nconst context = createContext();\r\n\r\nconst initialState = {\r\n  cities:[],\r\n  isLoading:false,\r\n  CurrentCity:{},\r\n  error:\"\"\r\n};\r\n\r\nfunction reducer(state , action)\r\n{\r\n  switch(action.type)\r\n  {\r\n    case \"loading\":\r\n      return {...state , isLoading:true};\r\n     case \"cities/loaded\":\r\n       return {...state , isLoading:false,cities:action.payload}\r\n      case \"cities/created\":\r\n        return {...state , }\r\n      case \"rejected\":\r\n        return {...state,isLoading:false , error:action.payload}\r\n      case \"city/loaded\":\r\n        return {...state , isLoading:false , CurrentCity:action.payload}\r\n      case \"cities/created\":\r\n        return {...state , isLoading:false , cities:[...state.cities , action.payload]}\r\n      case \"cities/deleted\":\r\n        return {...state , isLoading:false , cities:state.cities.filter((city)=>city.id!==action.payload)}\r\n\r\n  }\r\n}\r\n\r\nfunction CitiesProvider({children})\r\n{\r\n\r\n  const [{cities,isLoading,CurrentCity} , dispatch] = useReducer(reducer, initialState);\r\n    // const [cities , setCities] = useState([]);\r\n    // const [isLoading , setIsLoading] = useState(false);\r\n    // const [CurrentCity , setCurrentCity] = useState({});\r\n\r\n    useEffect(function(){\r\n      async function getData()\r\n      {\r\n        dispatch({type:\"loading\"})\r\n        const res = await fetch(\"http://localhost:8000/cities\");\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n          console.log(data);\r\n          dispatch({type:\"cities/loaded\", payload:data})\r\n        }\r\n        else\r\n        {\r\n          dispatch({type:\"rejected\" , payload:\"There was an error\"});\r\n        }\r\n      }\r\n      getData();\r\n    } , [])\r\n\r\n    async function getCity(id)\r\n    {\r\n        // setIsLoading(true);\r\n        const res = await fetch(`http://localhost:8000/cities/${id}`);\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n          console.log(data);\r\n          dispatch({type:\"city/loaded\" , payload:data});\r\n        }\r\n        else\r\n        {\r\n          dispatch({type:\"city/loaded\" , payload:\"there was an error loading data\"});\r\n        } \r\n    }\r\n    async function createCity(newCity)\r\n    {\r\n        // setIsLoading(true);\r\n        const res = await fetch(`http://localhost:8000/cities` , {\r\n          method:'POST',\r\n          body:JSON.stringify(newCity),\r\n          headers:{\r\n            \"Content-type\":\"application/json\"\r\n          }\r\n        });\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n          dispatch({type:\"cities/created\" , payload:data})\r\n        }\r\n        else\r\n        {\r\n          alert(\"there was an error loading data\");\r\n        } \r\n    }\r\n    async function deleteCity(id)\r\n    {\r\n        // setIsLoading(true);\r\n        const res = await fetch(`http://localhost:8000/cities/${id}` , {\r\n          method:'DELETE'\r\n        });\r\n        if(res.ok)\r\n        {\r\n          const data = await res.json();\r\n         dispatch({type:\"cities/deleted\" , payload:id});\r\n        }\r\n        else\r\n        {\r\n          alert(\"there was an error loading data\");\r\n        } \r\n    }\r\n    return (\r\n        <context.Provider value = {{cities , isLoading , CurrentCity ,getCity , createCity , deleteCity}}>\r\n            {children}\r\n        </context.Provider>\r\n    )\r\n}\r\n\r\n\r\nfunction useCities()\r\n{\r\n    const contextfull = useContext(context);\r\n    if(context === undefined) throw new Error(\"cities context was used outside  provider\"); \r\n    return contextfull;\r\n}\r\nexport {CitiesProvider , useCities};","C:\\Users\\Kali\\Desktop\\world\\src\\contexts\\AuthContext.js",[],[],"C:\\Users\\Kali\\Desktop\\world\\src\\components\\User.jsx",["148"],[],"import { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport styles from \"./User.module.css\";\n\nconst FAKE_USER = {\n  name: \"Jack\",\n  email: \"jack@example.com\",\n  password: \"qwerty\",\n  \n};\n\nfunction User() {\n  const {user,logout} = useAuth();\n  const navigate = useNavigate();\n  function handleClick() {\n    logout();\n    navigate(\"/\");\n  }\n\n  return (\n    <div className={styles.user}>\n      <img src={user.avatar} alt={user.name} />\n      <span>Welcome, {user.name}</span>\n      <button onClick={handleClick}>Logout</button>\n    </div>\n  );\n}\n\nexport default User;\n\n/*\nCHALLENGE\n\n1) Add `AuthProvider` to `App.jsx`\n2) In the `Login.jsx` page, call `login()` from context\n3) Inside an effect, check whether `isAuthenticated === true`. If so, programatically navigate to `/app`\n4) In `User.js`, read and display logged in user from context (`user` object). Then include this component in `AppLayout.js`\n5) Handle logout button by calling `logout()` and navigating back to `/`\n*/\n","C:\\Users\\Kali\\Desktop\\world\\src\\components\\SpinnerFullPage.jsx",[],[],{"ruleId":"149","severity":1,"message":"150","line":12,"column":10,"nodeType":"151","messageId":"152","endLine":12,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":12,"column":21,"nodeType":"151","messageId":"152","endLine":12,"endColumn":29},{"ruleId":"154","severity":1,"message":"155","line":25,"column":6,"nodeType":"156","endLine":25,"endColumn":16,"suggestions":"157"},{"ruleId":"149","severity":1,"message":"158","line":1,"column":16,"nodeType":"151","messageId":"152","endLine":1,"endColumn":27},{"ruleId":"149","severity":1,"message":"159","line":9,"column":25,"nodeType":"151","messageId":"152","endLine":9,"endColumn":40},{"ruleId":"149","severity":1,"message":"160","line":15,"column":9,"nodeType":"151","messageId":"152","endLine":15,"endColumn":17},{"ruleId":"161","severity":1,"message":"162","line":28,"column":19,"nodeType":"163","messageId":"164","endLine":28,"endColumn":21},{"ruleId":"149","severity":1,"message":"165","line":1,"column":34,"nodeType":"151","messageId":"152","endLine":1,"endColumn":49},{"ruleId":"149","severity":1,"message":"153","line":3,"column":21,"nodeType":"151","messageId":"152","endLine":3,"endColumn":29},{"ruleId":"154","severity":1,"message":"166","line":24,"column":6,"nodeType":"156","endLine":24,"endColumn":8,"suggestions":"167"},{"ruleId":"149","severity":1,"message":"159","line":21,"column":25,"nodeType":"151","messageId":"152","endLine":21,"endColumn":40},{"ruleId":"149","severity":1,"message":"168","line":26,"column":19,"nodeType":"151","messageId":"152","endLine":26,"endColumn":29},{"ruleId":"149","severity":1,"message":"153","line":1,"column":60,"nodeType":"151","messageId":"152","endLine":1,"endColumn":68},{"ruleId":"169","severity":1,"message":"170","line":14,"column":3,"nodeType":"171","messageId":"172","endLine":31,"endColumn":4},{"ruleId":"173","severity":1,"message":"174","line":26,"column":7,"nodeType":"175","messageId":"176","endLine":27,"endColumn":88},{"ruleId":"149","severity":1,"message":"177","line":104,"column":17,"nodeType":"151","messageId":"152","endLine":104,"endColumn":21},{"ruleId":"149","severity":1,"message":"178","line":5,"column":7,"nodeType":"151","messageId":"152","endLine":5,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isAuthenticated'. Either include it or remove the dependency array.","ArrayExpression",["179"],"'useNavigate' is defined but never used.","'setSearchParams' is assigned a value but never used.","'navigate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useSearchParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getCity' and 'id'. Either include them or remove the dependency array.",["180"],"'setCountry' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","'data' is assigned a value but never used.","'FAKE_USER' is assigned a value but never used.",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},"Update the dependencies array to be: [isAuthenticated, navigate]",{"range":"185","text":"186"},"Update the dependencies array to be: [getCity, id]",{"range":"187","text":"188"},[720,730],"[isAuthenticated, navigate]",[654,656],"[getCity, id]"]